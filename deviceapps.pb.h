// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: deviceapps.proto
// Protobuf C++ Version: 5.29.3

#ifndef deviceapps_2eproto_2epb_2eh
#define deviceapps_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_deviceapps_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_deviceapps_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_deviceapps_2eproto;
class DeviceApps;
struct DeviceAppsDefaultTypeInternal;
extern DeviceAppsDefaultTypeInternal _DeviceApps_default_instance_;
class DeviceApps_Device;
struct DeviceApps_DeviceDefaultTypeInternal;
extern DeviceApps_DeviceDefaultTypeInternal _DeviceApps_Device_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class DeviceApps_Device final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DeviceApps.Device) */ {
 public:
  inline DeviceApps_Device() : DeviceApps_Device(nullptr) {}
  ~DeviceApps_Device() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceApps_Device* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceApps_Device));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceApps_Device(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceApps_Device(const DeviceApps_Device& from) : DeviceApps_Device(nullptr, from) {}
  inline DeviceApps_Device(DeviceApps_Device&& from) noexcept
      : DeviceApps_Device(nullptr, std::move(from)) {}
  inline DeviceApps_Device& operator=(const DeviceApps_Device& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceApps_Device& operator=(DeviceApps_Device&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceApps_Device& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceApps_Device* internal_default_instance() {
    return reinterpret_cast<const DeviceApps_Device*>(
        &_DeviceApps_Device_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DeviceApps_Device& a, DeviceApps_Device& b) { a.Swap(&b); }
  inline void Swap(DeviceApps_Device* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceApps_Device* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceApps_Device* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceApps_Device>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceApps_Device& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceApps_Device& from) { DeviceApps_Device::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceApps_Device* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DeviceApps.Device"; }

 protected:
  explicit DeviceApps_Device(::google::protobuf::Arena* arena);
  DeviceApps_Device(::google::protobuf::Arena* arena, const DeviceApps_Device& from);
  DeviceApps_Device(::google::protobuf::Arena* arena, DeviceApps_Device&& from) noexcept
      : DeviceApps_Device(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // bytes id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // bytes type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // @@protoc_insertion_point(class_scope:DeviceApps.Device)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceApps_Device& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_deviceapps_2eproto;
};
// -------------------------------------------------------------------

class DeviceApps final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DeviceApps) */ {
 public:
  inline DeviceApps() : DeviceApps(nullptr) {}
  ~DeviceApps() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceApps* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceApps));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceApps(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceApps(const DeviceApps& from) : DeviceApps(nullptr, from) {}
  inline DeviceApps(DeviceApps&& from) noexcept
      : DeviceApps(nullptr, std::move(from)) {}
  inline DeviceApps& operator=(const DeviceApps& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceApps& operator=(DeviceApps&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceApps& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceApps* internal_default_instance() {
    return reinterpret_cast<const DeviceApps*>(
        &_DeviceApps_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(DeviceApps& a, DeviceApps& b) { a.Swap(&b); }
  inline void Swap(DeviceApps* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceApps* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceApps* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceApps>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceApps& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceApps& from) { DeviceApps::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceApps* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "DeviceApps"; }

 protected:
  explicit DeviceApps(::google::protobuf::Arena* arena);
  DeviceApps(::google::protobuf::Arena* arena, const DeviceApps& from);
  DeviceApps(::google::protobuf::Arena* arena, DeviceApps&& from) noexcept
      : DeviceApps(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Device = DeviceApps_Device;

  // accessors -------------------------------------------------------
  enum : int {
    kAppsFieldNumber = 2,
    kDeviceFieldNumber = 1,
    kLatFieldNumber = 3,
    kLonFieldNumber = 4,
  };
  // repeated uint32 apps = 2;
  int apps_size() const;
  private:
  int _internal_apps_size() const;

  public:
  void clear_apps() ;
  ::uint32_t apps(int index) const;
  void set_apps(int index, ::uint32_t value);
  void add_apps(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& apps() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_apps();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_apps() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_apps();

  public:
  // .DeviceApps.Device device = 1;
  bool has_device() const;
  void clear_device() ;
  const ::DeviceApps_Device& device() const;
  PROTOBUF_NODISCARD ::DeviceApps_Device* release_device();
  ::DeviceApps_Device* mutable_device();
  void set_allocated_device(::DeviceApps_Device* value);
  void unsafe_arena_set_allocated_device(::DeviceApps_Device* value);
  ::DeviceApps_Device* unsafe_arena_release_device();

  private:
  const ::DeviceApps_Device& _internal_device() const;
  ::DeviceApps_Device* _internal_mutable_device();

  public:
  // double lat = 3;
  void clear_lat() ;
  double lat() const;
  void set_lat(double value);

  private:
  double _internal_lat() const;
  void _internal_set_lat(double value);

  public:
  // double lon = 4;
  void clear_lon() ;
  double lon() const;
  void set_lon(double value);

  private:
  double _internal_lon() const;
  void _internal_set_lon(double value);

  public:
  // @@protoc_insertion_point(class_scope:DeviceApps)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceApps& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> apps_;
    ::google::protobuf::internal::CachedSize _apps_cached_byte_size_;
    ::DeviceApps_Device* device_;
    double lat_;
    double lon_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_deviceapps_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DeviceApps_Device

// bytes id = 1;
inline void DeviceApps_Device::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeviceApps_Device::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DeviceApps.Device.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceApps_Device::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DeviceApps.Device.id)
}
inline std::string* DeviceApps_Device::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:DeviceApps.Device.id)
  return _s;
}
inline const std::string& DeviceApps_Device::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeviceApps_Device::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeviceApps_Device::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeviceApps_Device::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DeviceApps.Device.id)
  return _impl_.id_.Release();
}
inline void DeviceApps_Device::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceApps.Device.id)
}

// bytes type = 2;
inline void DeviceApps_Device::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& DeviceApps_Device::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DeviceApps.Device.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceApps_Device::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DeviceApps.Device.type)
}
inline std::string* DeviceApps_Device::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:DeviceApps.Device.type)
  return _s;
}
inline const std::string& DeviceApps_Device::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void DeviceApps_Device::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* DeviceApps_Device::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* DeviceApps_Device::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DeviceApps.Device.type)
  return _impl_.type_.Release();
}
inline void DeviceApps_Device::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceApps.Device.type)
}

// -------------------------------------------------------------------

// DeviceApps

// .DeviceApps.Device device = 1;
inline bool DeviceApps::has_device() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.device_ != nullptr);
  return value;
}
inline void DeviceApps::clear_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ != nullptr) _impl_.device_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::DeviceApps_Device& DeviceApps::_internal_device() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DeviceApps_Device* p = _impl_.device_;
  return p != nullptr ? *p : reinterpret_cast<const ::DeviceApps_Device&>(::_DeviceApps_Device_default_instance_);
}
inline const ::DeviceApps_Device& DeviceApps::device() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DeviceApps.device)
  return _internal_device();
}
inline void DeviceApps::unsafe_arena_set_allocated_device(::DeviceApps_Device* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.device_);
  }
  _impl_.device_ = reinterpret_cast<::DeviceApps_Device*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:DeviceApps.device)
}
inline ::DeviceApps_Device* DeviceApps::release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DeviceApps_Device* released = _impl_.device_;
  _impl_.device_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::DeviceApps_Device* DeviceApps::unsafe_arena_release_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:DeviceApps.device)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DeviceApps_Device* temp = _impl_.device_;
  _impl_.device_ = nullptr;
  return temp;
}
inline ::DeviceApps_Device* DeviceApps::_internal_mutable_device() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DeviceApps_Device>(GetArena());
    _impl_.device_ = reinterpret_cast<::DeviceApps_Device*>(p);
  }
  return _impl_.device_;
}
inline ::DeviceApps_Device* DeviceApps::mutable_device() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DeviceApps_Device* _msg = _internal_mutable_device();
  // @@protoc_insertion_point(field_mutable:DeviceApps.device)
  return _msg;
}
inline void DeviceApps::set_allocated_device(::DeviceApps_Device* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.device_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.device_ = reinterpret_cast<::DeviceApps_Device*>(value);
  // @@protoc_insertion_point(field_set_allocated:DeviceApps.device)
}

// repeated uint32 apps = 2;
inline int DeviceApps::_internal_apps_size() const {
  return _internal_apps().size();
}
inline int DeviceApps::apps_size() const {
  return _internal_apps_size();
}
inline void DeviceApps::clear_apps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apps_.Clear();
}
inline ::uint32_t DeviceApps::apps(int index) const {
  // @@protoc_insertion_point(field_get:DeviceApps.apps)
  return _internal_apps().Get(index);
}
inline void DeviceApps::set_apps(int index, ::uint32_t value) {
  _internal_mutable_apps()->Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceApps.apps)
}
inline void DeviceApps::add_apps(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_apps()->Add(value);
  // @@protoc_insertion_point(field_add:DeviceApps.apps)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& DeviceApps::apps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DeviceApps.apps)
  return _internal_apps();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DeviceApps::mutable_apps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DeviceApps.apps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_apps();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
DeviceApps::_internal_apps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.apps_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DeviceApps::_internal_mutable_apps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.apps_;
}

// double lat = 3;
inline void DeviceApps::clear_lat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = 0;
}
inline double DeviceApps::lat() const {
  // @@protoc_insertion_point(field_get:DeviceApps.lat)
  return _internal_lat();
}
inline void DeviceApps::set_lat(double value) {
  _internal_set_lat(value);
  // @@protoc_insertion_point(field_set:DeviceApps.lat)
}
inline double DeviceApps::_internal_lat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lat_;
}
inline void DeviceApps::_internal_set_lat(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = value;
}

// double lon = 4;
inline void DeviceApps::clear_lon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = 0;
}
inline double DeviceApps::lon() const {
  // @@protoc_insertion_point(field_get:DeviceApps.lon)
  return _internal_lon();
}
inline void DeviceApps::set_lon(double value) {
  _internal_set_lon(value);
  // @@protoc_insertion_point(field_set:DeviceApps.lon)
}
inline double DeviceApps::_internal_lon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lon_;
}
inline void DeviceApps::_internal_set_lon(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // deviceapps_2eproto_2epb_2eh
